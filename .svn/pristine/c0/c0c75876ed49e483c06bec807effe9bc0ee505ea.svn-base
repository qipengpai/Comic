package com.qin.crxl.comic.action;

import java.io.IOException;
import java.util.Date;
import java.util.Map;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.qin.crxl.comic.entity.CartoonTask;
import com.qin.crxl.comic.entity.UserEntity;
import com.qin.crxl.comic.service.CartoonTaskServcie;
import com.qin.crxl.comic.service.UserService;
import com.qin.crxl.comic.system.ActionUrl;
import com.qin.crxl.comic.tool.DateUtil;
import com.qin.crxl.comic.tool.Model;
import com.qin.crxl.comic.tool.ParaClick;
import com.qin.crxl.comic.tool.StringToInt;
import com.qin.weixin.dao.impl.WeiXinDaoImpl;
import com.qin.weixin.model.OAuthAccessToken;
import com.qin.weixin.model.useValue;

@Controller
public class WeiXinAction {

	@Autowired
	private UserService blindService;
	@Autowired
	private CartoonTaskServcie cartoonTaskServcie;
	private static Logger log = Logger.getLogger(WeiXinAction.class.getName());

	/**
	 * 微信登录
	 * 
	 * @param request
	 * @param response
	 * @throws ServletException
	 * @throws IOException
	 */
	@Scope("prototype")
	@ResponseBody
	@RequestMapping(value = ActionUrl.WEIXINLOGIN, method = RequestMethod.GET)
	public Model doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		response.setContentType("text/html;charset=utf-8");
		request.setCharacterEncoding("utf-8");
		response.setCharacterEncoding("utf-8");
		String code = request.getParameter("code");
		String wxtp = "wz";
		try {
			// 获取渠道
			wxtp = request.getParameter("qd");
		} catch (Exception e) {
		}
		log.info("code:" + code);
		WeiXinDaoImpl dao = new WeiXinDaoImpl();
		UserEntity entity = null;
		try {
			OAuthAccessToken oac = dao.getOAuthAccessToken(useValue.AppId,
					useValue.AppSecret, code);// 通过code换取网页授权access_token
			log.info("--------------------" + oac.getAccessToken() + ";"
					+ oac.getRefreshToken() + ";" + oac.getScope() + ";"
					+ oac.getOpenid());
			OAuthAccessToken oacd = dao.refershOAuthAccessToken(useValue.AppId,
					oac.getRefreshToken());// 刷新access_token
			log.info("--------------------" + oacd.getAccessToken() + ";"
					+ oacd.getRefreshToken() + ";" + oacd.getScope()
					+ ";Openid:" + oacd.getOpenid());
			/*
			 * entity=dao.acceptOAuthUserNews(oacd.getAccessToken(),oacd.getOpenid
			 * ());//获取用户信息
			 * log.info("------微信拉去用户数据成功--------------"+entity.getNickname
			 * ()+";"+entity.getCountry());
			 */
			entity = blindService.updateUser(entity, wxtp);
			/*
			 * if (entity == null) { return new Model(500, "no ok"); }
			 */
			entity.setNickname(StringToInt.toString(entity.getNickname()));
			log.info("------微信拉去用户数据成功--------------" + entity.getNickname()
					+ ";" + entity.getCountry());
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			log.info("-------------------微信拉去用户数据失败--------------------------");
			return new Model(500, "登录失败");
		}
		log.info("-------------------用户信息-" + entity.toString());
		return new Model(200, entity);
		// 跳转到界面
		// 找不到*.html
		/*
		 * request.getRequestDispatcher("../index.html?userid="+entity.getUserId(
		 * )).forward(request, response);
		 */
	}

	/*public Map pp(UserEntity entity) {
		// 今天时间
		String newTime = DateUtil.dateToTimeStamp(new Date());
		// 查询用户今天是否登录过任务
		CartoonTask cartoonTask = cartoonTaskServcie.updateQianDao(entity, newTime);
		if (!ParaClick.clickObj(cartoonTask)) {
			// 查询用户曾经是否存在任务列表
			CartoonTask cartoonTask2  = cartoonTaskServcie.updateQianDao2(entity);
			// 用户是第一次进入平台未做过任务
			if (!ParaClick.clickObj(cartoonTask2)) {
				boolean b = cartoonTaskServcie.addCartoonTask(entity);
				if (b) {
					return new Model(200, user);
				} else {
					return new Model(500, "用户信息异常");
				}
			}

			// 用户曾经进入过平台存在任务列表
			boolean addMallTask = mallTaskService.addMallTask(user,
					closeMallTask.getSeeMe(), closeMallTask.getSeeMeContent(),
					closeMallTask.getBoundPhoneContent(),
					closeMallTask.getBoundPhone(), closeMallTask.getSignDay());
			if (addMallTask) {
				return new Model(200, user);
			} else {
				return new Model(500, "用户信息异常");
			}
			mallTask = mallTaskService.updateQianDao(user, newTime);
			if (!ParaClick.clickObj(mallTask)) {

				// 查询用户曾经是否存在任务列表
				MallTask closeMallTask = mallTaskService.updateQianDao(user);
				// 用户是第一次进入平台未做过任务
				if (!ParaClick.clickObj(closeMallTask)) {
					boolean b = mallTaskService.addMallTask(user);
					if (b) {
						return new Model(200, user);
					} else {
						return new Model(500, "用户信息异常");
					}
				}

				// 用户曾经进入过平台存在任务列表
				boolean addMallTask = mallTaskService.addMallTask(user,
						closeMallTask.getSeeMe(),
						closeMallTask.getSeeMeContent(),
						closeMallTask.getBoundPhoneContent(),
						closeMallTask.getBoundPhone(),
						closeMallTask.getSignDay());
				if (addMallTask) {
					return new Model(200, user);
				} else {
					return new Model(500, "用户信息异常");
				}

			}
		}
	}*/
}
