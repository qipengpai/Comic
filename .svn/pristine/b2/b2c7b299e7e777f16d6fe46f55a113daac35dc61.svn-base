package com.qin.crxl.comic.service.impl;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.qin.crxl.comic.base.BaseServiceImpl;
import com.qin.crxl.comic.entity.CartoonTask;
import com.qin.crxl.comic.entity.UserEntity;
import com.qin.crxl.comic.entity.UserTask;
import com.qin.crxl.comic.entity.vo.CartoonTaskData;
import com.qin.crxl.comic.entity.vo.UserTaskData;
import com.qin.crxl.comic.service.CartoonTaskServcie;
import com.qin.crxl.comic.service.UserService;
import com.qin.crxl.comic.service.UserTaskService;
import com.qin.crxl.comic.tool.DateUtil;
import com.qin.crxl.comic.tool.ParaClick;

@Service
public class UserTaskServiceImpl extends BaseServiceImpl<UserTask> implements UserTaskService{

	@Autowired
	private CartoonTaskServcie cartoonTaskServcie;
	@Autowired
	private UserService userService;
	
	@Override
	public List<UserTask> getAllUserTask(UserEntity userEntity) {
		// 查看用戶的任務表 
		List<UserTask> list=SQL("SELECT * FROM UserTask WHERE userId='"+userEntity.getUserId()+"' ORDER BY implDate ASC",UserTask.class);
		return list;
	}

	@Override
	public boolean addUserTask(UserEntity userEntity) {
		// 給用戶增加用戶表
		boolean flag=false;
		try {
			List<CartoonTask> list=cartoonTaskServcie.getAllCartoonTask();
			if (!ParaClick.clickList(list)) {
				return flag;
			}
			for (int i = 0; i < list.size(); i++) {
				UserTask userTask=new UserTask();
				userTask.setTaskId(list.get(i).getId());
				userTask.setUserId(userEntity.getUserId());
				userTask.setTaskState(0);
				userTask.setImplDate(DateUtil.getdate_yyyy_MM_dd_HH_MM_SS());
				super.save(userTask);
			}
			flag=true;
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
			return flag;
		}
		return flag;
	}

	@Override
	public UserTask getTaskByUser(UserTaskData userTaskData) {
		// 查詢簽到任務 
		List<UserTask> list=SQL("SELECT * FROM UserTask WHERE userId='"+userTaskData.getUserId()+"' AND taskId='"+userTaskData.getTaskId()+"'",UserTask.class);
		if (ParaClick.clickList(list)) {
			return list.get(0);
		}
		return null;
	}

	@Override
	public boolean updateSignState(UserTaskData userTaskData) {
		// 簽到
		boolean flag=false;
		try {
			UserTask userTask=super.get(userTaskData.getId());
			if (userTask.getTaskState()<7) {
				userTask.setTaskState(userTask.getTaskState()+1);
			}else{
				userTask.setTaskState(1);
			}
			userTask.setImplDate(DateUtil.getdate_yyyy_MM_dd());
			userTask.setButtonState(0);
			flag=true;
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
			return flag;
		}
		return flag;
	}

	@Override
	public boolean updateSignState2(UserTaskData userTaskData) {
		// 簽到
		boolean flag=false;
		try {
			UserTask userTask=super.get(userTaskData.getId());
			userTask.setTaskState(1);
			userTask.setImplDate(DateUtil.getdate_yyyy_MM_dd());
			userTask.setButtonState(0);
			flag=true;
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
			return flag;
		}
		return flag;
	}

	@Override
	public boolean updateUserInteAndState(UserTaskData userTaskData, int Integral) {
		// 領取綁定手機獎勵
		boolean flag=false;
		try {
			UserTask userTask=super.get(userTaskData.getId());
			userTask.setTaskState(2);
			userTask.setImplDate(DateUtil.getdate_yyyy_MM_dd());
			userTask.setButtonState(0);
			boolean flag2=userService.updateUserIntegral(userTaskData.getUserId(),Integral);
			if (!flag2) {
				return flag;
			}
			flag=true;
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
			return flag;
		}
		return flag;
	}

	@Override
	public boolean finallyShare(CartoonTaskData cartoonTaskData) {
		// 分享后修改任务的分享状态  
		boolean flag=false;
		try {
			List<UserTask> list=SQL("SELECT * FROM UserTask WHERE userId='"+cartoonTaskData.getUserId()+"' AND taskId=3",UserTask.class);
			if (!ParaClick.clickList(list)) {
				return flag;
			}
			list.get(0).setTaskState(2);
			list.get(0).setImplDate(DateUtil.getdate_yyyy_MM_dd());
			list.get(0).setButtonState(0);
			flag=true;
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
			return flag;
		}
		
		return flag;
	}

	

}
