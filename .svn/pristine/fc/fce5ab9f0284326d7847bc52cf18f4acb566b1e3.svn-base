package com.qin.crxl.comic.action;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.qin.crxl.comic.entity.Banner;
import com.qin.crxl.comic.entity.Cartoon;
import com.qin.crxl.comic.entity.vo.BannerData;
import com.qin.crxl.comic.service.AdminBannerService;
import com.qin.crxl.comic.service.AdminCartoonService;
import com.qin.crxl.comic.system.ActionUrl;
import com.qin.crxl.comic.tool.Model;
import com.qin.crxl.comic.tool.ParaClick;
import com.qin.game.entity.redis.JedisUtil;

/**
 * 漫画的Banner
 * @author cui
 *
 */
@Controller
public class AdminBannerController {
	@Autowired
	private AdminBannerService adminBannerService;
	@Autowired
	private AdminCartoonService adminCartoonService;
	@ResponseBody
	@RequestMapping(value = ActionUrl.ADD_BANNER, method = RequestMethod.POST)
	public Model addBanner(BannerData bannerData){
		boolean bool = adminBannerService.addBanner(bannerData);
		if(bool){
			return new Model(200,"添加成功");
		}
		return new Model(500,"添加失败");
	}

	@ResponseBody
	@RequestMapping(value = ActionUrl.DELETE_BANNER, method = RequestMethod.POST)
	public Model deleteBanner(BannerData bannerData){
		if(ParaClick.clickString(bannerData.getId())){
			return new Model(500,"id为空");
		}
		boolean bool = adminBannerService.deleteBanner(bannerData);
		if(bool){
			return new Model(200,"删除成功");
		}
		return new Model(500,"删除失败");
	}
	
	@ResponseBody
	@RequestMapping(value = ActionUrl.UPDATE_BANNER, method = RequestMethod.POST)
	public Model updateBanner(BannerData bannerData){
		if(!ParaClick.clickString(bannerData.getState())){
			Cartoon cartoon = adminCartoonService.selectByIdCartoon(bannerData.getCartoonId());
			if(!ParaClick.clickObj(cartoon)){
				return new Model(500,"无此漫画");
			}
			if(cartoon.getState()==0){
				return new Model(500,"Banner图代表的漫画未上线,请将此漫画上线后在修改");
			}
		}
		if(ParaClick.clickString(bannerData.getId())){
			return new Model(500,"id为空");
		}
		boolean updateBanner = adminBannerService.updateBanner(bannerData);
		if(updateBanner){
			return new Model(200,"修改成功");
		}
		return new Model(500,"修改失败");
	}
	
	@ResponseBody
	@RequestMapping(value = ActionUrl.SELECT_BANNER, method = RequestMethod.POST)
	public Model selectBanner(BannerData bannerData){
		List<Object[]> allBanner = adminBannerService.getAllBanner(bannerData);
		if(ParaClick.clickList(allBanner)){
			return new Model(200,allBanner);
		}
		return new Model(500,"查询失败");
	}
	
	@ResponseBody
	@RequestMapping(value = ActionUrl.SELECT_BANNERBYID, method = RequestMethod.POST)
	public Model selectBannerById(BannerData bannerData){
		if(ParaClick.clickString(bannerData.getId())){
			return new Model(500,"id为空");
		}
		Banner banner = adminBannerService.selectBannerById(bannerData);
		if(ParaClick.clickObj(banner)){
			return new Model(200,banner);
		}
		return new Model(500,"查询失败");
	}
}
