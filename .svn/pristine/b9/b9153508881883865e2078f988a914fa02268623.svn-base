package com.qin.crxl.comic.service.impl;

import java.util.List;

import org.springframework.stereotype.Service;

import com.qin.crxl.comic.base.BaseServiceImpl;
import com.qin.crxl.comic.entity.UserEntity;
import com.qin.crxl.comic.entity.vo.UserEntityData;
import com.qin.crxl.comic.service.AdminUserEntityService;
import com.qin.crxl.comic.tool.ParaClick;
import com.qin.crxl.comic.tool.StringToInt;
@Service
public class AdminUserEntityServiceImpl extends BaseServiceImpl<UserEntity> implements
		AdminUserEntityService {

	@Override
	public List<UserEntity> selectUser(UserEntityData userEntityData) {
		StringBuffer sb=new StringBuffer();
		sb.append("select * from UserEntity where 1=1");
		if (!ParaClick.clickString(userEntityData.getCondition())) {
			sb.append(" AND ((openid LIKE '%"+StringToInt.toInt(userEntityData.getCondition().trim())+"%') OR (nickname LIKE '%"+StringToInt.toInt(userEntityData.getCondition().trim())+"%') OR (phone LIKE '%"+StringToInt.toInt(userEntityData.getCondition().trim())+"%') OR (city LIKE '%"+StringToInt.toInt(userEntityData.getCondition().trim())+"%'))");
		}
		sb.append(" order by vipId DESC,integral DESC limit "+ (Integer.parseInt(userEntityData.getNowPage())-1) * Integer.parseInt(userEntityData.getPageNum()) + ","
				+ Integer.parseInt(userEntityData.getPageNum()));
		List<UserEntity> list=null;;
		try {
			list = SQL(sb.toString(),UserEntity.class);
		} catch (Exception e) {
			// TODO Auto-generated catch block
		}
		return list;
	}

	@Override
	public int getCount(UserEntityData userEntityData) {
		int gettotalpage=0;
		StringBuffer sb=new StringBuffer();
		sb.append("select count(*) from UserEntity where 1=1");
		if (!ParaClick.clickString(userEntityData.getCondition())) {
			sb.append(" AND ((openid LIKE '%"+StringToInt.toInt(userEntityData.getCondition().trim())+"%') OR (nickname LIKE '%"+StringToInt.toInt(userEntityData.getCondition().trim())+"%') OR (phone LIKE '%"+StringToInt.toInt(userEntityData.getCondition().trim())+"%') OR (city LIKE '%"+StringToInt.toInt(userEntityData.getCondition().trim())+"%'))");
		}
		try {
			gettotalpage = super.gettotalpage(sb.toString());
		} catch (Exception e) {
			// TODO Auto-generated catch block
		}
		return gettotalpage;
	}

	@Override
	public UserEntity selectUserByID(String id) {
		return super.get(id);
	}

	
}
