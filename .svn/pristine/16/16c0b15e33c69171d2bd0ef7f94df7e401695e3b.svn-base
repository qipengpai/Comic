package com.qin.crxl.comic.action;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.qin.crxl.comic.entity.Distributor;
import com.qin.crxl.comic.entity.UserEntity;
import com.qin.crxl.comic.entity.vo.DistributorData;
import com.qin.crxl.comic.entity.vo.UserEntityData;
import com.qin.crxl.comic.service.DistributorService;
import com.qin.crxl.comic.system.ActionUrl;
import com.qin.crxl.comic.system.SystemConfig;
import com.qin.crxl.comic.tool.Model;
import com.qin.crxl.comic.tool.ParaClick;
import com.qin.crxl.comic.tool.RandomUtil;
import com.qin.crxl.comic.tool.SendCode;

@Controller
public class DistributorController {

	@Autowired
	private DistributorService distributorService;

	/**
	 * 注册分销商
	 * @author pengpai
	 * @date 2018/2/26 10:33
	 * @param []
	 * @return void
	 */
	@ResponseBody
	@RequestMapping(value = ActionUrl.DISTRIBUTOR_REGISTER, method = RequestMethod.POST)
	public Model userRegisterSend(DistributorData distributorData)
			throws Exception {
		if (ParaClick.clickString(distributorData.getUserName())) {
			return new Model(500, "请输入账号");
		}
		if (ParaClick.clickString(distributorData.getUserPwd())) {
			return new Model(500, "请输入密码");
		}
		if (ParaClick.clickString(distributorData.getQd())) {
			return new Model(500, "请输入渠道");
		}
		if (ParaClick.clickString(distributorData.getProportion())) {
			return new Model(500, "分成比例");
		}
		//  查看渠道是否存在
		List<Distributor> distributor = distributorService
				.getByQd(distributorData.getQd());
		if (ParaClick.clickList(distributor)) {
			return new Model(500, "该渠道已存在");
		}
		//  查看用户名是否存在
		List<Distributor> distributor2 = distributorService
				.getByUserName(distributorData.getUserName());
		if (ParaClick.clickList(distributor2)) {
			return new Model(500, "该用户名已存在");
		}
		boolean flag=distributorService.registerDistributor(distributorData);
		if (!flag) {
			return new Model(500, "注册失败");
		}
		Model model = new Model();
		model.setError(200);
		model.setMsg("注册成功");
		return model;
	}
	/**
	 * 修改分销商属性
	 * @author pengpai
	 * @date 2018/2/26 10:33
	 * @param []
	 * @return void
	 */
	@ResponseBody
	@RequestMapping(value = ActionUrl.DISTRIBUTOR_UPDATE_INFORMATION, method = RequestMethod.POST)
	public Model dirtributionUpdate(DistributorData distributorData)
			throws Exception {
		boolean flag=distributorService.updateDistributorInfo(distributorData);
		if (!flag) {
			return new Model(500, "注册失败");
		}
		Model model = new Model();
		model.setError(200);
		model.setMsg("注册成功");
		return model;
	}
	
	/**
	 * 根据id分销商属性
	 * @author pengpai
	 * @date 2018/2/27 21:17
	 * @param []
	 * @return void
	 */
	@ResponseBody
	@RequestMapping(value = ActionUrl.DISTRIBUTOR_GET_BYID, method = RequestMethod.POST)
	public Model dirtributionGetById(DistributorData distributorData)
			throws Exception {
		Distributor distributor=distributorService.get(distributorData.getId());
		if (distributor==null) {
			return new Model(500, "查询失败");
		}
		Model model = new Model();
		model.setError(200);
		model.setObj(distributor);
		model.setMsg("查询成功");
		return model;
	}
	
	/**
	 * 查询供销商
	 * @author pengpai
	 * @date 2018/2/27 10:33
	 * @param []
	 * @return void
	 */
	@ResponseBody
	@RequestMapping(value = ActionUrl.DISTRIBUTOR_GET, method = RequestMethod.POST)
	public Model getDirtribution(DistributorData distributorData)
			throws Exception {
		if (ParaClick.clickString(distributorData.getNowPage())) {
			distributorData.setNowPage("1");
		}
		if (ParaClick.clickString(distributorData.getPageNum())) {
			distributorData.setPageNum("15");
		}
		int num = distributorService.getDistributorNum(distributorData.getCondition());
		if (num==0) {
			return new Model(500, "无供应商");
		}
		//  查询供销商
		List<Distributor> distributor = distributorService.getDistributor(distributorData.getNowPage(),distributorData.getCondition(),distributorData.getPageNum());
		if (!ParaClick.clickList(distributor)) {
			return new Model(500, "无供应商");
		}
		Model model = new Model();
		model.setError(200);
		model.setNowpage(Integer.parseInt(distributorData.getNowPage()));
		model.setNowpage(Integer.parseInt(distributorData.getNowPage()));
		model.setTotalpage((num + Integer.parseInt(distributorData.getPageNum()) - 1) / Integer.parseInt(distributorData.getPageNum()));
		model.setObj(distributor);
		model.setTotalNum(num);
		model.setMsg("查询成功");
		return model;
	}
}
