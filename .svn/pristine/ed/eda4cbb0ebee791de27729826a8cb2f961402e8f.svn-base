package com.qin.crxl.comic.action;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.qin.crxl.comic.entity.Cartoon;
import com.qin.crxl.comic.entity.CartoonAllType;
import com.qin.crxl.comic.entity.CartoonType;
import com.qin.crxl.comic.entity.vo.CartoonVo;
import com.qin.crxl.comic.service.AdminCartoonAllTypeService;
import com.qin.crxl.comic.service.AdminCartoonService;
import com.qin.crxl.comic.service.AdminCartoonTypeService;
import com.qin.crxl.comic.system.ActionUrl;
import com.qin.crxl.comic.tool.Model;
import com.qin.crxl.comic.tool.ParaClick;
/**
 * 漫画控制类
 * @author cui
 *
 */
@Controller
public class AdminCartoonController {
	@Autowired
	private AdminCartoonService adminCartoonService;
	@Autowired
	private AdminCartoonTypeService adminCartoonTypeService;
	@Autowired
	private AdminCartoonAllTypeService adminCartoonAllTypeService;
	
	@ResponseBody
	@RequestMapping(value = ActionUrl.ADD_CARTOON, method = RequestMethod.POST)
	public Model addCartoon(CartoonVo cartoonVo){
		
		String cartoonId = adminCartoonService.addAdminCartoon(cartoonVo);
		if(ParaClick.clickString(cartoonId)){
			return new Model(500,"添加失败");
		}
		return new Model(200,cartoonId);
	}
	
	@ResponseBody
	@RequestMapping(value = ActionUrl.DELETE_CARTOON, method = RequestMethod.POST)
	public Model deleteCartoon(CartoonVo cartoonVo){
		boolean bool = adminCartoonService.deleteAdminCartoon(cartoonVo.getId());
		if(bool){
			return new Model(200,"删除成功");
		}
		return new Model(500,"删除失败");
	}
	
	@ResponseBody
	@RequestMapping(value = ActionUrl.UPDATE_CARTOON, method = RequestMethod.POST)
	public Model updateCartoon(CartoonVo cartoonVo){
		boolean bool = adminCartoonService.updateAdminCartoon(cartoonVo);
		if(bool){
			return new Model(200,"修改成功");
		}
		return new Model(200,"修改失败");
	}
	
	
	@ResponseBody
	@RequestMapping(value = ActionUrl.SELECT_CARTOON, method = RequestMethod.POST)
	public Model selectCartoon(CartoonVo cartoonVo){
		Model model=new Model();
		int num=0;
		if(ParaClick.clickString(cartoonVo.getNowPage())){
			cartoonVo.setNowPage("1");
		}
		if(ParaClick.clickString(cartoonVo.getPageNum())){
			cartoonVo.setPageNum("10");
		}
		List<Cartoon> cartoonList = adminCartoonService.selectAllCartoon(cartoonVo);
		num=adminCartoonService.getCount(cartoonVo);
		List<Object> obj=new ArrayList<Object>();
		if(ParaClick.clickList(cartoonList)){
			for(int i=0;i<cartoonList.size();i++){
				Map<String,Object> cartoonAndType=new HashMap<String,Object>();
				//将此漫画存入用于返回
				cartoonAndType.put("cartoon",cartoonList.get(i));
				//此漫画具备的所有的类型
//				List<CartoonType> cartoonTypeAll = adminCartoonTypeService.selectAllCartoonType(cartoonList.get(i));
				List<CartoonAllType> cartoonAllType = adminCartoonAllTypeService.selectCartoonAllType(cartoonList.get(i).getId());
				List<String> cartoonTypeStr=new ArrayList<String>();
				if(ParaClick.clickList(cartoonAllType)){
					for(int j=0;j<cartoonAllType.size();j++){
						CartoonType selectCartoonType = adminCartoonTypeService.selectCartoonType(cartoonAllType.get(j).getCartoonTypeId());
						cartoonTypeStr.add(selectCartoonType.getCartoonType());
					}
					//将此漫画的所有类型存入用于返回
					cartoonAndType.put("cartoonTypeAll",cartoonTypeStr);
				}else{
					cartoonAndType.put("cartoonTypeAll", "");
				}
				
//				if(ParaClick.clickList(cartoonTypeStr)&&cartoonTypeStr.size()>0){
//					//将此漫画的所有类型存入用于返回
//					cartoonAndType.put("cartoonTypeAll",cartoonTypeStr);
//				}
				obj.add(cartoonAndType);
			}
		}
		model.setError(200);
		model.setNowpage(Integer.parseInt(cartoonVo.getNowPage()));
		model.setTotalpage((num + 10 - 1) / Integer.parseInt(cartoonVo.getPageNum()));
		model.setObj(obj);
		return model;
		
	}
	
	
	
	
}
