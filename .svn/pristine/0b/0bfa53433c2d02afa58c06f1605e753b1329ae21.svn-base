package com.qin.crxl.comic.action;

import java.awt.image.BufferedImage;

import java.util.ArrayList;
import java.util.List;

import javax.imageio.ImageIO;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

import com.qin.crxl.comic.entity.vo.FriendPhotoData;
import com.qin.crxl.comic.qny.UploadDemo;
import com.qin.crxl.comic.system.ActionUrl;
import com.qin.crxl.comic.tool.Model;
import com.qin.crxl.comic.tool.ParaClick;

@Controller
public class FileController {

	/**
	 * pp
	 * 
	 * @Remarks app>用戶操作>上传图片
	 * @throws Exception
	 * */
	@ResponseBody
	@RequestMapping(value = ActionUrl.USER_UPLOD_PORTRACT, method = RequestMethod.POST)
	public Model userUplod(@RequestParam(value = "file") MultipartFile[] file)
			throws Exception {
		List<Object> list = new ArrayList<Object>();
		try {
			UploadDemo uploadDemo = new UploadDemo();
			for (int i = 0; i < file.length; i++) {
				String userfile = uploadDemo.upload(file[i]);
				if (ParaClick.clickString(userfile)) {
					return new Model(500, "上传失败");
				}
				BufferedImage image = ImageIO.read(file[i].getInputStream());
				FriendPhotoData friendPhotoData=new FriendPhotoData();
				friendPhotoData.setSrc(userfile);
				friendPhotoData.setH(image.getHeight()+"");
				friendPhotoData.setW(image.getWidth()+"");
				list.add(friendPhotoData);
			}
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
		}
		return new Model(200, list);
	}

	@ResponseBody
	@RequestMapping(value = ActionUrl.USER_UPLOD_PORTRACT_UPDATE, method = RequestMethod.POST)
	public Model userUplodUpdate(
			@RequestParam(value = "file") MultipartFile[] file)
			throws Exception {
		List<Object> list = new ArrayList<Object>();
		try {
			UploadDemo uploadDemo = new UploadDemo();
			for (int i = 0; i < file.length; i++) {
				String userfile = uploadDemo.upload(file[i]);
				if (ParaClick.clickString(userfile)) {
					return new Model(500, "上传失败");
				}
				BufferedImage image = ImageIO.read(file[i].getInputStream());
				FriendPhotoData friendPhotoData = new FriendPhotoData();
				friendPhotoData.setSrc(userfile);
				friendPhotoData.setH(image.getHeight() + "");
				friendPhotoData.setW(image.getWidth() + "");
				list.add(friendPhotoData);
			}
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
		}
		return new Model(200, list);
	}

}
