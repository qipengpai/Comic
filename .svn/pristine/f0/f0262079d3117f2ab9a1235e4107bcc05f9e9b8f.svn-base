package com.qin.crxl.comic.action;

import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.awt.image.BufferedImage;
import java.util.ArrayList;
import java.util.List;

import org.apache.commons.fileupload.disk.DiskFileItem;
import javax.imageio.ImageIO;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.commons.CommonsMultipartFile;

import com.qin.crxl.comic.entity.vo.FriendPhotoData;
import com.qin.crxl.comic.qny.UploadDemo;
import com.qin.crxl.comic.system.ActionUrl;
import com.qin.crxl.comic.tool.ImageTools;
import com.qin.crxl.comic.tool.Model;
import com.qin.crxl.comic.tool.ParaClick;

@Controller
public class FileController {

	/**
	 * pp
	 * 
	 * @Remarks app>用戶操作>上传图片
	 * @throws Exception
	 * */
	@ResponseBody
	@RequestMapping(value = ActionUrl.USER_UPLOD_PORTRACT, method = RequestMethod.POST)
	public Model userUplod(@RequestParam(value = "file") MultipartFile[] file)
			throws Exception {
		List<Object> list = new ArrayList<Object>();
		UploadDemo uploadDemo = new UploadDemo();
		for (int i = 0; i < file.length; i++) {
			InputStream is = null;
			BufferedImage src = null;
			int imgWidth = 750; // 默认足够大的宽
			int imgHeight = 569;// 默认足够大的高
			try {
//				CommonsMultipartFile cf = (CommonsMultipartFile) file[i]; // 这个myfile是MultipartFile的
//				DiskFileItem fi = (DiskFileItem) cf.getFileItem();
				
				File f = (File)file[i];
				is = new FileInputStream(f);
				src = javax.imageio.ImageIO.read(is);
				imgWidth = src.getWidth(); // 得到源图宽
				imgHeight = src.getHeight(); // 得到源图高
				System.out.println("源图宽:" + imgWidth);
				System.out.println("源图高:" + imgHeight);
			} catch (Exception e) {
				e.printStackTrace();
			}
			String userfile = uploadDemo.upload(file[i]);
			if (ParaClick.clickString(userfile)) {
				return new Model(500, "上传失败");
			}
			list.add(userfile);
			list.add(imgWidth);
			list.add(imgHeight);
		}
		return new Model(200, list);
	}

	@ResponseBody
	@RequestMapping(value = ActionUrl.USER_UPLOD_PORTRACT_UPDATE, method = RequestMethod.POST)
	public Model userUplodUpdate(
			@RequestParam(value = "file") MultipartFile[] file)
			throws Exception {
		List<Object> list = new ArrayList<Object>();
		UploadDemo uploadDemo = new UploadDemo();
		for (int i = 0; i < file.length; i++) {
			System.out.println(file[i]);
			if (ParaClick.clickObj(file[i])) {
				continue;
			}
			String userfile = uploadDemo.upload(file[i]);
			if (ParaClick.clickString(userfile)) {
				return new Model(500, "上传失败");
			}
			BufferedImage image = ImageIO.read(file[i].getInputStream());
			FriendPhotoData friendPhotoData=new FriendPhotoData();
			friendPhotoData.setSrc(userfile);
			friendPhotoData.setH(image.getHeight()+"");
			friendPhotoData.setW(image.getWidth()+"");
			list.add(friendPhotoData);
		}
		return new Model(200, list);
	}

}
