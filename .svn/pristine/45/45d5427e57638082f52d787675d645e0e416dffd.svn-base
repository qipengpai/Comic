package com.qin.crxl.comic.action;


import java.util.List;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.qin.crxl.comic.entity.Cartoon;
import com.qin.crxl.comic.entity.CartoonSet;
import com.qin.crxl.comic.entity.UserEntity;
import com.qin.crxl.comic.entity.vo.CartoonData;
import com.qin.crxl.comic.service.CartoonService;
import com.qin.crxl.comic.service.CartoonSetService;
import com.qin.crxl.comic.system.ActionUrl;
import com.qin.crxl.comic.tool.Model;
import com.qin.crxl.comic.tool.ParaClick;

@Controller
public class CartoonController {

	@Autowired
	private CartoonService cartoonService;
	@Autowired
	private CartoonSetService cartoonSetService;
	/**
	 * pp
	 * 首页漫画列表
	 * */
	@ResponseBody
	@RequestMapping(value=ActionUrl.GET_ALL_CARTOON,method = RequestMethod.POST)
	public Model getAllCartoon(HttpSession session,CartoonData cartoonData){
		UserEntity userEntity=(UserEntity) session.getAttribute("user");
		if (userEntity==null) {
			return new Model(404,"无用户");
		}
		List<Cartoon> list =cartoonService.getALLCartoon(cartoonData);
		if(!ParaClick.clickList(list)){
			return new Model(500,"查询话集异常");
		}
		return new Model(200,list);
	}
	
	/**
	 * pp
	 * 热门漫画列表
	 * */
	@ResponseBody
	@RequestMapping(value=ActionUrl.GET_ALL_HOT_CARTOON,method = RequestMethod.POST)
	public Model getAllHOTCartoon(HttpSession session,CartoonData cartoonData){
		UserEntity userEntity=(UserEntity) session.getAttribute("user");
		if (userEntity==null) {
			return new Model(404,"无用户");
		}
		List<Cartoon> list =cartoonService.getALLHotCartoon(cartoonData);
		if(!ParaClick.clickList(list)){
			return new Model(500,"查询话集异常");
		}
		return new Model(200,list);
	}
	
	/**
	 * pp
	 * 漫画表头
	 * */
	@ResponseBody
	@RequestMapping(value=ActionUrl.GET_CARTOON_HEAD_BYID,method = RequestMethod.POST)
	public Model getCartoonById(HttpSession session,CartoonData cartoonData){
		UserEntity userEntity=(UserEntity) session.getAttribute("user");
		if (userEntity==null) {
			return new Model(404,"无用户");
		}
		Cartoon cartoon=cartoonService.get(cartoonData.getId());
		if(cartoon==null){
			return new Model(404,"无此漫画");
		}
		return new Model(200,cartoon);
	}
	/**
	 * pp
	 * 漫画详情
	 * */
	@ResponseBody
	@RequestMapping(value=ActionUrl.GET_CARTOONPHOTO_INFO_BYID,method = RequestMethod.POST)
	public Model getCartoonInfoById(HttpSession session,CartoonData cartoonData){
		UserEntity userEntity=(UserEntity) session.getAttribute("user");
		if (userEntity==null) {
			return new Model(404,"无用户");
		}
		Cartoon cartoon=cartoonService.get(cartoonData.getId());
		if(cartoon==null){
			return new Model(404,"无此漫画");
		}
		return new Model(200,cartoon);
	}
}
