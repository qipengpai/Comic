package com.qin.crxl.comic.service.impl;

import java.util.List;

import javassist.bytecode.LineNumberAttribute.Pc;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.qin.crxl.comic.base.BaseServiceImpl;
import com.qin.crxl.comic.entity.Cartoon;
import com.qin.crxl.comic.entity.CartoonComment;
import com.qin.crxl.comic.entity.FollowCartoon;
import com.qin.crxl.comic.entity.UserEntity;
import com.qin.crxl.comic.entity.vo.CartoonData;
import com.qin.crxl.comic.exception.BusinessException;
import com.qin.crxl.comic.service.CartoonService;
import com.qin.crxl.comic.service.FollowCartoonService;
import com.qin.crxl.comic.tool.DateUtil;
import com.qin.crxl.comic.tool.ParaClick;

@Service
public class FollowCartoonServiceImpl extends BaseServiceImpl<FollowCartoon> implements FollowCartoonService{
	@Autowired
	private CartoonService cartoonService;
	@Override
	public int getFollowCount(String id) {
		// 查看漫画关注人数
		int num=super.gettotalpage("SELECT COUNT(*) FROM FollowCartoon WHERE cartoonId='"+id+"' AND updateState=1 ");
		return num;
	}

	@Override
	public boolean followCartoon(CartoonData cartoonData, UserEntity userEntity) {
		// 关注
		boolean flag =false;
		try {
			FollowCartoon followCartoon=new FollowCartoon();
			followCartoon.setCartoonId(followCartoon.getId());
			followCartoon.setFollowDate(DateUtil.getdate_yyyy_MM_dd_HH_MM_SS());
			followCartoon.setUpdateState(1);
			followCartoon.setUserId(userEntity.getUserId());
			super.save(followCartoon);
			boolean flag2=cartoonService.addFollowNum(cartoonData);
			if (!flag2) {
				throw new BusinessException("增加關注人數");
			}
			flag=true;
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
			return flag;
		}
		return flag;
	}

	@Override
	public List<FollowCartoon> getFollowByid(CartoonData cartoonData,UserEntity userEntity) {
		// 根据你userId查看用户是否关注
		StringBuffer sb = new StringBuffer();
		sb.append("SELECT  * FROM  FollowCartoon  WHERE  1=1 AND userId='"
				+ userEntity.getUserId()
				+ "' AND cartoonId='"+cartoonData.getId()+"' AND  updateState=1 ");
		List<FollowCartoon> list = super.SQL(sb.toString(),
				FollowCartoon.class);

		return list;
	}

	@Override
	public int getCartoonByBookshelfCount(CartoonData cartoonData,
			UserEntity userEntity) {
		// 查看書架數量
		StringBuffer sb = new StringBuffer();
		sb.append("SELECT  COUNT(*) FROM  FollowCartoon  WHERE  1=1 AND userId='"
				+ userEntity.getUserId()
				+ "' AND  updateState=1 ");
		int num=super.gettotalpage(sb.toString());
		return num;
	}

	@Override
	public List<FollowCartoon> getCartoonByBookshelf(CartoonData cartoonData,
			UserEntity userEntity) {
		// 查看書架
		StringBuffer sb = new StringBuffer();
		sb.append("SELECT  * FROM  FollowCartoon  WHERE  1=1 AND userId='"
				+ userEntity.getUserId()
				+ "' AND  updateState=1 ");
		sb.append(" ORDER BY followDate DESC LIMIT "+(Integer.parseInt(cartoonData.getNowPage())-1)*10+",10");
		List<FollowCartoon> list=super.SQL(sb.toString(),  FollowCartoon.class );
		return list;
	}

	@Override
	public boolean deleteFollowCartoon(CartoonData cartoonData,
			UserEntity userEntity) {
		// 取消關注 
		boolean flag =false;
		try {
			List<FollowCartoon> followCartoon=SQL("SELECT * FROM FollowCartoon WHERE cartoonId='"+cartoonData.getId()+"' AND userId='"+userEntity.getUserId()+"'",FollowCartoon.class);
			if (!ParaClick.clickList(followCartoon)) {
				return flag;
			}
			for (int i = 0; i < followCartoon.size(); i++) {
				super.delete(followCartoon.get(i).getId());
			}
			boolean flag2=cartoonService.deleteFollowNum(cartoonData);
			if (!flag2) {
				throw new BusinessException("減少關注人數");
			}
			flag=true;
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
			return flag;
		}
		return flag;
	}

	
}
