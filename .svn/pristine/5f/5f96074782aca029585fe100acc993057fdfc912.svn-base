package com.qin.crxl.comic.action;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.qin.crxl.comic.entity.Cartoon;
import com.qin.crxl.comic.entity.CartoonSet;
import com.qin.crxl.comic.entity.UserEntity;
import com.qin.crxl.comic.entity.VeryOk;
import com.qin.crxl.comic.entity.vo.CartoonData;
import com.qin.crxl.comic.entity.vo.CartoonSetData;
import com.qin.crxl.comic.service.CartoonSetService;
import com.qin.crxl.comic.service.UserService;
import com.qin.crxl.comic.service.VeryOkService;
import com.qin.crxl.comic.system.ActionUrl;
import com.qin.crxl.comic.tool.Model;
import com.qin.crxl.comic.tool.ParaClick;

@Controller
public class CartoonSetController {
	@Autowired
	private VeryOkService veryOkService;
	@Autowired
	private CartoonSetService cartoonSetService;
	@Autowired
	private UserService userService;
	/**
	 * pp
	 * 漫画集数列表
	 * @throws Exception 
	 * */
	@ResponseBody
	@RequestMapping(value=ActionUrl.GET_CARTOONSET_BYID,method = RequestMethod.POST)
	public Model getCartoonSetById(HttpSession session,CartoonData cartoonData) throws Exception{
		cartoonData.clickUser();
		UserEntity userEntity=userService.get(cartoonData.getUserId());
		if (userEntity==null) {
			return new Model(404,"无用户");
		}
		Model model = new Model();
		int num =cartoonSetService.getPageNum(cartoonData);
		if (num == 0) {
			return new Model(500, "未查询到信息");
		}
		List<Object> list2=new ArrayList<Object>();
		List<CartoonSet> cartoonSet =cartoonSetService.getByCartoonId(cartoonData);
		if(!ParaClick.clickList(cartoonSet)){
			return new Model(500,"查询话集异常");
		}
		for (int i = 0; i < cartoonSet.size(); i++) {
			Map<String,Object> map =new HashMap<String, Object>();
			List<VeryOk> list=veryOkService.getUserVseryOk(cartoonSet.get(i).getId(),userEntity);
			if(!ParaClick.clickList(list)){
				map.put("veryOk", 0);
			}else{
				map.put("veryOk", 1);
			}
			int count=veryOkService.getUserVseryOkCount(cartoonSet.get(i).getId(),userEntity);
			cartoonSet.get(i).setOkCount(count);
			map.put("cartoonSet", cartoonSet);
			list2.add(map);
		}
		model.setError(200);
		model.setNowpage(Integer.parseInt(cartoonData.getNowPage()));
		model.setTotalpage((num + 10 - 1) / 10);
		model.setObj(list2);
		return model;
	}
	/**
	 * pp
	 * 漫画集数列表>点赞
	 * @throws Exception 
	 * */
	@ResponseBody
	@RequestMapping(value=ActionUrl.GET_CARTOONSET_BYID_OKCOUNT,method = RequestMethod.POST)
	public Model getCartoonSetByIdOkCOUNT(HttpSession session,CartoonSetData cartoonSetData) throws Exception{
		cartoonSetData.clickUser();
		UserEntity userEntity=userService.get(cartoonSetData.getUserId());
		if (userEntity==null) {
			return new Model(404,"无用户");
		}
		boolean flag =veryOkService.addVeryOK(cartoonSetData,userEntity);
		if (!flag) {
			return new Model(500,"点赞异常");
		}
		CartoonSet cartoonSet=cartoonSetService.getCarrtoonBySetId(cartoonSetData);
		if(cartoonSet==null){
			return new Model(500,"查询话集异常");
		}
		Map<String,Object> map =new HashMap<String, Object>();
		List<VeryOk> list=veryOkService.getUserVseryOk(cartoonSetData.getId(),userEntity);
		if(!ParaClick.clickList(list)){
			map.put("veryOk", 0);
		}else{
			map.put("veryOk", 1);
		}
		int count=veryOkService.getUserVseryOkCount(cartoonSet.getId(),userEntity);
		cartoonSet.setOkCount(count);
		map.put("cartoonSet", cartoonSet);
		return new Model(200,map);
	}
	/**
	 * pp 漫画详情
	 * 
	 * @throws Exception
	 * */
/*	@ResponseBody
	@RequestMapping(value = ActionUrl.GET_CARTOONPHOTO_INFO_BYID, method = RequestMethod.POST)
	public Model getCartoonInfoById(HttpSession session, CartoonData cartoonData)
			throws Exception {
		cartoonData.clickUser();
		UserEntity userEntity = userService.get(cartoonData.getUserId());
		if (userEntity == null) {
			return new Model(404, "无用户");
		}
		Cartoon cartoon = cartoonService.get(cartoonData.getId());
		if (cartoon == null) {
			return new Model(404, "无此漫画");
		}
		return new Model(200, cartoon);
	}*/
}
