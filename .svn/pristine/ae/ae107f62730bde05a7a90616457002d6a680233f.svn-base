package com.qin.crxl.comic.action;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.qin.crxl.comic.entity.CartoonModel;
import com.qin.crxl.comic.entity.vo.CartoonModelData;
import com.qin.crxl.comic.service.CartoonModelService;
import com.qin.crxl.comic.system.ActionUrl;
import com.qin.crxl.comic.tool.Model;
import com.qin.crxl.comic.tool.ParaClick;

@Controller
public class CartoonModelController {

	@Autowired
	private CartoonModelService cartoonModelService;
	
	/**
	 * pp
	 * @Remarks 查看所有漫画模块
	 * @throws Exception
	 * */
	@ResponseBody
	@RequestMapping(value = ActionUrl.SELECT_CARTOON_MODEL, method = RequestMethod.POST)
	public Model getAllCartoonModel() throws Exception {
		Model model = new Model();
		List<CartoonModel> list2=cartoonModelService.getAllCartoonModel();
		if (!ParaClick.clickList(list2)) {
			return new Model(500, "无數據");
		}
		model.setError(200);
		model.setObj(list2);
		return model;
	}
	
	/**
	 * pp
	 * @Remarks 增加漫画模块
	 * @throws Exception
	 * */
	@ResponseBody
	@RequestMapping(value = ActionUrl.ADD_CARTOON_MODEL, method = RequestMethod.POST)
	public Model addCartoonModel(CartoonModelData cartoonModelData) throws Exception {
		if (ParaClick.clickString(cartoonModelData.getModel())) {
			return new Model(500, "模块名为空");
		}
		int sort=0;
		List<CartoonModel> list2=cartoonModelService.getAllCartoonModel();
		if (!ParaClick.clickList(list2)) {
			sort=100;
		}else{
			sort=list2.get(0).getSort();
		}
		boolean flag=cartoonModelService.addCartoonModel(cartoonModelData.getModel(),sort);
		if (!flag) {
			return new Model(500, "添加失败");
		}
		return new Model(500, "添加成功");
	}
	
	/**
	 * pp
	 * @Remarks 查看漫画模块根据Id
	 * @throws Exception
	 * */
	@ResponseBody
	@RequestMapping(value = ActionUrl.SELECT_CARTOON_MODEL_BYID, method = RequestMethod.POST)
	public Model getAllCartoonModelById(String id) throws Exception {
		Model model = new Model();
		if (ParaClick.clickString(id)) {
			return new Model(500, "id为空");
		}
		CartoonModel cartoonModel=cartoonModelService.get(id);
		if (cartoonModel==null) {
			return new Model(500, "无數據");
		}
		model.setError(200);
		model.setObj(cartoonModel);
		return model;
	}
	
	/**
	 * pp
	 * @Remarks 修改漫画模块
	 * @throws Exception
	 * */
	@ResponseBody
	@RequestMapping(value = ActionUrl.UPDATE_CARTOON_MODEL, method = RequestMethod.POST)
	public Model updateCartoonModelById(CartoonModelData cartoonModelData) throws Exception {
		if (ParaClick.clickString(cartoonModelData.getId())) {
			return new Model(500, "id为空");
		}
		boolean flag=cartoonModelService.updateCartoonModelById(cartoonModelData);
		if (!flag) {
			return new Model(500, "修改失敗");
		}
		return new Model(500, "修改成功");
	}
	
	/**
	 * pp
	 * @Remarks 删除漫画模块
	 * @throws Exception
	 * */
	@ResponseBody
	@RequestMapping(value = ActionUrl.DELETE_CARTOON_MODEL, method = RequestMethod.POST)
	public Model deleteCartoonModelById(CartoonModelData cartoonModelData) throws Exception {
		if (ParaClick.clickString(cartoonModelData.getId())) {
			return new Model(500, "id为空");
		}
		boolean flag=cartoonModelService.deleteCartoonModelById(cartoonModelData.getId());
		if (!flag) {
			return new Model(500, "修改失敗");
		}
		return new Model(500, "修改成功");
	}
}
