package com.qin.crxl.comic.action;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.qin.crxl.comic.entity.Cartoon;
import com.qin.crxl.comic.entity.CartoonAllType;
import com.qin.crxl.comic.entity.CartoonType;
import com.qin.crxl.comic.entity.SearchHistory;
import com.qin.crxl.comic.entity.UserEntity;
import com.qin.crxl.comic.entity.vo.SearchInitializationData;
import com.qin.crxl.comic.service.CartoonAllTypeService;
import com.qin.crxl.comic.service.CartoonCommentService;
import com.qin.crxl.comic.service.CartoonService;
import com.qin.crxl.comic.service.CartoonTypeService;
import com.qin.crxl.comic.service.FollowCartoonService;
import com.qin.crxl.comic.service.HistoryRecordService;
import com.qin.crxl.comic.service.SearchHistoryService;
import com.qin.crxl.comic.service.UserService;
import com.qin.crxl.comic.system.ActionUrl;
import com.qin.crxl.comic.tool.Model;
import com.qin.crxl.comic.tool.ParaClick;

@Controller
public class SearchAction {
	@Autowired
	private CartoonService cartoonService;
	@Autowired
	private UserService userService;
	@Autowired
	private SearchHistoryService searchHistoryService;
	@Autowired
	private HistoryRecordService historyRecordService;
	@Autowired
	private FollowCartoonService followCartoonService;
	@Autowired
	private CartoonCommentService cartoonCommentService;
	@Autowired
	private CartoonTypeService cartoonTypeService;
	@Autowired
	private CartoonAllTypeService cartoonAllTypeService;
	/**
	 * 
	 * @author 覃金林
	 * @throws Exception 
	 * @date 2017年12月7日
	 * @Remarks
	 * @Tile={<h1>....</h1>}
	 * @describe={<p>...</p>}
	 *
	 */
	@ResponseBody
	@RequestMapping(value = ActionUrl.GET_SEARCH, method = RequestMethod.POST)
	public Model getSearch(SearchInitializationData searchInitializationData) throws Exception{
		searchInitializationData.clickUser();
		UserEntity userEntity = userService.get(searchInitializationData.getUserId());
		if (userEntity == null) {
			return new Model(404, "无用户");
		}
		List<Object> list2 = new ArrayList<Object>();
		List<Cartoon> list=cartoonService.getSearchLike(searchInitializationData.getConext());
		if(!ParaClick.clickList(list)){
			return new Model(500,"无类似");
		}
		for (int i = 0; i < list.size(); i++) {
			Map<String, Object> map = new HashMap<String, Object>();
			List<CartoonAllType> cartoonAllType=cartoonAllTypeService.getByCartoonId(list.get(i).getId());
			List<Object> list3 = new ArrayList<Object>();
			for (int j = 0; j < cartoonAllType.size(); j++) {
				Map<String, Object> map2 = new HashMap<String, Object>();
				CartoonType cartoonType=cartoonTypeService.get(cartoonAllType.get(i).getCartoonTypeId());
				map2.put("carrtoonType", cartoonType);
				list3.add(map2);
			}
			list2.add(map);
		}
		return new Model(200, list2);
	}
	
	
	/**
	 * 
	 * @author 覃金林
	 * @date 2017年12月6日
	 * @Remarks
	 * @Tile={<h1>搜索初始化</h1>}
	 * @describe={<p>进入功能加载历史搜索记录/热搜等关键词</p>}
	 *
	 */
	@ResponseBody
	@RequestMapping(value = ActionUrl.GET_SEARCH_INITIALIZATION, method = RequestMethod.POST)
	public Model getSearchHot(SearchInitializationData searchInitializationData) throws Exception{
		searchInitializationData.clickUser();
		//获取用户的历史记录
		List<String> history=new ArrayList<>();
		
		List<SearchHistory> shList=searchHistoryService.getHistory(searchInitializationData.getUserId());
		if(shList!=null&&shList.size()>0){
			for(SearchHistory sh :shList){
				history.add(sh.getConext());
			}
		}
		//获取热门搜索
		List<String> hot=new ArrayList<>();
		List<Cartoon> ctList=cartoonService.getHot0_8();
		if(ctList!=null&& ctList.size()>0){
			for(Cartoon ct:ctList){
				hot.add(ct.getCartoonName());
			}
		}
		Map<String, Object> ret=new HashMap<>();
		ret.put("history", history);
		ret.put("hot", hot);
		return new Model(200, ret);
	}

}
